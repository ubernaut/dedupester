#summary Use case: Merge Libraries
#labels Featured,Phase-Design

===Use Case 3: Merge Libraries===

*Scope:* DeDupester application

*Level:* user goal

*Primary Actor:* User

*Stakeholders and Interests:*
 _User:_ has two mp3 libraries, referred to here as foreign and local. Both of which contain unsorted mp3s.  The user wants to bring the files from the foreign library into the local library but does not want to bring files over that already exist in the local library.
 
*Preconditions:* there are two libraries containing mp3s

*Main Success Scenario:*
  # User launches DeDupester application and chooses to [MergeLibraries Merge Libraries].   
  # Application prompts for location of libraries and Dupieness threshold. 
  # User enters both library locations with a Dupieness threshold of one. 
  # Files from both libraries are indexed by name and file-size. 
  # Duplicate files are listed for review. 
  # User chooses to proceed with data Merge. 
  # All foreign unique files are copied.
  # Application terminates. 
  
*Open Issues:*

Only the most basic duplicate files are identified here. Duplicate files with different names may escape detection in this scenario. As the Dupieness Threshold increases, the application will analyze metadata to identify duplicates based on origin albums or differing bitrates.